
namespace OVASOFT.NET.EntityFramework.RepositoryPattern.Abstractions.OnionCore.DomainModel;

/// <summary>Base interface for database-mapped classes.</summary>
/// <remarks>This interface does not contain properties or methods, it only indicates that the class (aka entity) is mapped to the database.</remarks>
/// <autogeneratedoc />
/// TODO Edit XML Comment Template for IEntity
public interface IEntity { }


/// <summary>An extended universal interface for implementing an entity mapped to a database.</summary>
/// <typeparam name="TId">Type Entity Id as struct, i.e. int, long, Guid etc.</typeparam>
/// <remarks>
/// This interface is inherited from the basic IEntity interface.<br />As a result, the class implementing
/// the universal interface IEntity&lt;TId&gt; actually implements two interfaces - this universal
/// and the basic IEntity.<br />
/// This makes it possible, when choosing classes that are entities in the sense of the Entity Framework,
/// not to go through all possible implementations of the universal interface, but to limit oneself to classes
/// that implement the basic IEntity interface.
/// </remarks>
/// <autogeneratedoc />
/// TODO Edit XML Comment Template for IEntity`1
public interface IEntity<TId> : IEntity where TId : struct
{
    /// <summary>Gets or sets the Entity Id.</summary>
    TId Id { get; set; }
} 

