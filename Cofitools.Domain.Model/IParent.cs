
namespace Ovasoft.Cofitools.Domain.Model;

/// <summary>The interface implements the navigation property of the child entity.</summary>
/// <typeparam name="TParentId">The type of the parent identifier.</typeparam>
/// <typeparam name="TParent">The type of the parent.</typeparam>
/// <autogeneratedoc />
/// TODO Edit XML Comment Template for IParent`2
public interface IParent<TParentId, TParent>
    where TParentId : struct
    where TParent : class, IEntityBase
{
    /// <summary>Gets or sets the parent identifier.</summary>
    /// <value>The parent identifier.</value>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for ParentId
    public TParentId ParentId { get; set; }
    /// <summary>Gets or sets the parent.</summary>
    /// <value>The parent as entity.</value>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for Parent
    public TParent Parent { get; set; }
}

/// <summary>The interface implements the navigation property of the child entity when the type Id is int.</summary>
/// <typeparam name="TParent">The type of the parent.</typeparam>
/// <autogeneratedoc />
/// TODO Edit XML Comment Template for IParent`1
public interface IParent<TParent>: IParent<int, TParent> where TParent : class, IEntityBase { }
